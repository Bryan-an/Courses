@import url("other-sheet.css");

html {
  scroll-behavior: smooth;
}

body {
  background-color: black;
}

* {
  color: white;
}

input {
  color: black;
}

/*
Comment in CSS
css rule consists of two parts
1) the selector
2) statement block: {
  attribute: value;
  attribute-more-than-2-words: another-value;
}
*/

/* They are bad practice becuase they are blocking the time the browser read this instruction */
h1 {
  color: orangered;
  background-color: black;
}

/* Links and documentation 
    https://developer.mozilla.org/es/docs/Web/CSS\
    https://cssreference.io/ 
    https://caniuse.com/
    https://www.w3.org/TR/css-2020/
    https://codeguide.co/#css-syntax
*/

/* 
Basic selectors
  1)Tags - they are HTML elements
  2)Identifiers - id atribute - #
  3)Classes - class atribute - .
*/

/* Styling with id is an antipattern */
#paragraph-two {
  background-color: skyblue;
}

/* Styling with classes allows us to reuse our CSS code */
.bg-skyblue {
  background-color: skyblue;
}

.bg-steelblue {
  background-color: steelblue;
}

.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.text-white {
  color: white;
}

.direct-children > li {
  background-color: thistle;
}

.descendant-children b {
  background-color: thistle;
  color: #000;
}

/* The sibling selectors will apply to the elements that are siblings and that are below the reference element.*/
.siblings-general ~ li {
  background-color: thistle;
}

.siblings-adjacent + li {
  background-color: thistle;
}

/* Attributes selectors */
.selectors-attributes a[href] {
  color: orangered;
}

.selectors-attributes a[target="_blank"] {
  font-weight: bold;
}

/* The * wildcard applies the style if it contains the text in question anywhere */
.selectors-attributes a[href*="jonmircha"] {
  font-size: 24px;
}

/* The ^ wildcard applies the style if it contains the text in question at the beggining */
.selectors-attributes a[href^="http:"] {
  text-decoration: none;
}

/* The $ wildcard applies the style if it contains the text in question at the end */
.selectors-attributes a[href$=".com"] {
  background-color: white;
}

/* The ~ wildcard applies the style if it contains the text in question in a space-separating list */
.selectors-attributes a[class~="courses"] {
  background-color: steelblue;
}

/* The | (pipe) wildcard applies the style if it contains the text in question in a space-separating list and a hyphe follow the text in question - */
.selectors-attributes a[class|="menu"] {
  font-style: italic;
}

/* Universal Selector */
* {
  font-family: sans-serif;
}

.universal-selector * {
  font-size: 24px;
}

/* 
Pseudo classes - Give styles depending on the context, position or state of the element.
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes
*/
.form-pseudo-classes *:required {
  border-color: yellow;
}

.form-pseudo-classes *:valid {
  border-color: green;
}

.form-pseudo-classes *:invalid {
  border-color: red;
}

.form-pseudo-classes *:focus {
  background-color: skyblue;
}

.form-pseudo-classes *:disabled {
  background-color: pink;
}

.menu-pseudo-classes a:visited {
  color: olive;
}

.menu-pseudo-classes a:hover {
  color: orange;
}

.p-pseudo-classes:hover {
  font-size: 20px;
}

#css-syllabus:target {
  background-color: lightgreen;
}

.pseudo-classes-list li:first-child {
  color: green;
}

.pseudo-classes-list li:last-child {
  color: violet;
}

.pseudo-classes-list li:nth-child(3) {
  color: navy;
}

.pseudo-classes-list li:nth-child(4n) {
  font-size: 20px;
}

.pseudo-classes-list li:nth-child(3n + 1) {
  font-weight: bold;
}

.pseudo-classes-list li:nth-child(even) {
  background-color: yellow;
  color: #aaa;
}

.pseudo-classes-list li:nth-child(odd) {
  background-color: orange;
  color: #aaa;
}

.article-pseudo-classes p:first-of-type {
  background-color: pink;
}

.article-pseudo-classes p:last-of-type {
  background-color: violet;
}

.article-pseudo-classes p:nth-of-type(3) {
  background-color: fuchsia;
}

/* .article-pseudo-classes *:not(p, .button, .list, #one) {
  background-color: beige;
  color: black;
} */

.article-pseudo-classes *:not(p) {
  background-color: beige;
  color: black;
}

/* 
Pseudo-elements - They give styles to specific parts of an element, the :: is used to differentiate them from pseudo classes. 
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-elements
*/

.saga-gemini::before {
  content: "üë®üèº‚Äçü§ù‚Äçüë®üèº";
}

.saga-gemini::after {
  content: "üòé";
}

.saga-price::before {
  content: "$";
  font-weight: bold;
}

.saga-price::after {
  content: "USD";
  font-weight: bold;
}

.p-pseudo-elements::first-letter {
  font-weight: bold;
  font-size: 32px;
}

.p-pseudo-elements::first-line {
  color: coral;
}

.p-pseudo-elements::selection {
  color: greenyellow;
  background-color: #333;
}

.input-pseudo-element::placeholder {
  color: yellowgreen;
}

/* Group Selectors */
.form-group-selectors input[type="text"],
.form-group-selectors input[type="email"],
.form-group-selectors textarea {
  border-color: yellow;
  border-width: 2px;
  border-style: dashed;
  background-color: black;
  font-size: 20px;
  display: block;
  width: 300px;
}

/* CSS Algorithm: It is the browser's way of applying styles to the HTML document. It is vital to understand this concept so that you understand how CSS rules are applied and sometimes overridden. 
  1) Cascade
  2) Specificity
  3) Inheritance

Cascade is the mechanism by which the browser applies styles.
And take into account the following in this order:
  1) The code origin:
    - User Agent (the browser default styles)
    - User customization
    - Author styles
  2) The Selector Specificity
  3) Appearance order

Specificity is the selector weight when there is a styles conflict.
It's calculated by follow way:
  Tags and pseudoelements---------------------------0,0,0,1
  Classes, atributes and pseudoclasses--------------0,0,1,0
  Identifiers---------------------------------------0,1,0,0
  Inline styles-------------------------------------1,0,0,0
  !important--------------------------Break the specificity
*/

blockquote#cite-marco.cite-marco {
  background-color: lightsteelblue;
}

blockquote {
  background-color: burlywood;
  color: black;
}

blockquote cite {
  color: inherit;
}

#cite-marco {
  background-color: lightgreen;
}

blockquote.cite-marco {
  background-color: tomato;
}

.cite-marco {
  background-color: cornflowerblue;
}

.cite-marco {
  background-color: mediumaquamarine !important;
}

blockquote#cite-marco {
  background-color: lightsalmon;
}

.cite-marco {
  background-color: moccasin !important;
}
